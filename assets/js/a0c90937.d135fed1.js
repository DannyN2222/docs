"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5275],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(r),c=a,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||i;return r?n.createElement(k,l(l({ref:t},p),{},{components:r})):n.createElement(k,l({ref:t},p))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},4306:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=r(7462),a=(r(7294),r(4137));const i={},l=void 0,o={unversionedId:"unraid-os/release-notes/6.11.2",id:"unraid-os/release-notes/6.11.2",title:"6.11.2",description:"Version 6.11.2 2022-11-04",source:"@site/docs/unraid-os/release-notes/6.11.2.md",sourceDirName:"unraid-os/release-notes",slug:"/unraid-os/release-notes/6.11.2",permalink:"/unraid-os/release-notes/6.11.2",draft:!1,editUrl:"https://github.com/unraid/docs/tree/main/docs/unraid-os/release-notes/6.11.2.md",tags:[],version:"current",frontMatter:{},sidebar:"unraidSidebar",previous:{title:"6.11.1",permalink:"/unraid-os/release-notes/6.11.1"},next:{title:"6.11.3",permalink:"/unraid-os/release-notes/6.11.3"}},s={},u=[{value:"Version 6.11.2 2022-11-04",id:"version-6112-2022-11-04",level:2},{value:"VM Manager",id:"vm-manager",level:3},{value:"WireGuard",id:"wireguard",level:3},{value:"Plugin manager",id:"plugin-manager",level:3},{value:"Scheduler",id:"scheduler",level:3},{value:"Misc. webGUI",id:"misc-webgui",level:3},{value:"Linux kernel",id:"linux-kernel",level:3},{value:"Base Distro",id:"base-distro",level:3}],p={toc:u},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"version-6112-2022-11-04"},"Version 6.11.2 2022-11-04"),(0,a.kt)("p",null,"This release is focused on bug fixes and minor improvements. Please note there are important\nsecurity mitigations in Samba, all uses are encouraged to update."),(0,a.kt)("h3",{id:"vm-manager"},"VM Manager"),(0,a.kt)("p",null,"If you boot a VM from a passed physical USB device there is a new setting called ",(0,a.kt)("strong",{parentName:"p"},"Enable USB boot")," which\nmust be set to ",(0,a.kt)("strong",{parentName:"p"},"Yes"),". This is due to feature change in the latest OVMF component."),(0,a.kt)("p",null,"Changes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add boot order for USB and USB Boot option. Using 'boot order' field VM can boot from\na passed-through NVMe controller/device."),(0,a.kt)("li",{parentName:"ul"},"Add virtiofs/9p Unraid share mapping."),(0,a.kt)("li",{parentName:"ul"},"CD Hotplug bug fix."),(0,a.kt)("li",{parentName:"ul"},"Fix Hotplug within Templates."),(0,a.kt)("li",{parentName:"ul"},"Fix changing from passthru to custom CPU."),(0,a.kt)("li",{parentName:"ul"},"Test for guest agent to suppress error message in libvirt log, and\nshow text for guest not running or guest agent is not installed."),(0,a.kt)("li",{parentName:"ul"},"Fix unable to change HyperV settings."),(0,a.kt)("li",{parentName:"ul"},"Add 'start with console' option."),(0,a.kt)("li",{parentName:"ul"},"OVMF for QEMU: version edk2-stable202208")),(0,a.kt)("h3",{id:"wireguard"},"WireGuard"),(0,a.kt)("p",null,"Changes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fixed problem setting up tunnels if using default network.cfg settings."),(0,a.kt)("li",{parentName:"ul"},"Fix typo setting up routes.")),(0,a.kt)("h3",{id:"plugin-manager"},"Plugin manager"),(0,a.kt)("p",null,"Changes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If plugin files cannot be read from CDN URL, fall back to non-CDN URL."),(0,a.kt)("li",{parentName:"ul"},"Enforce plugin files must end in '.plg'."),(0,a.kt)("li",{parentName:"ul"},"Fix post hook failing when plugin download fails."),(0,a.kt)("li",{parentName:"ul"},"Adjust the wget parameters to keep it from indefinitely hanging.")),(0,a.kt)("h3",{id:"scheduler"},"Scheduler"),(0,a.kt)("p",null,"For scheduled Parity Checks, change default mode to Non-correcting. In case there are disk\nissues during a parity check it would be safer to have the default be non-correct. If sync errors\nare detected then the user can analyze the log and act accordingly."),(0,a.kt)("h3",{id:"misc-webgui"},"Misc. webGUI"),(0,a.kt)("p",null,"Changes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DashStats: The inbound networkstats is out of place when numeric value is xxx.x."),(0,a.kt)("li",{parentName:"ul"},"Docker: Add/clarify Help to Docker Custom Network settings."),(0,a.kt)("li",{parentName:"ul"},"Docker: Fix display aberration on orphan images"),(0,a.kt)("li",{parentName:"ul"},'SMART attributes: clarify message: "Can not read attributes" to "Attributes not available"'),(0,a.kt)("li",{parentName:"ul"},"ShareEdit/ShareList: show pool not defined when share pool is not a defined pool")),(0,a.kt)("h3",{id:"linux-kernel"},"Linux kernel"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"version 5.19.17"),(0,a.kt)("li",{parentName:"ul"},"patch: additional NVMe BOGUS_NID quirks for non-compliant devices reported by users"),(0,a.kt)("li",{parentName:"ul"},"sound support:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"CONFIG_SOUND: Sound card support"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND: Advanced Linux Sound Architecture"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND_OSSEMUL: Enable OSS Emulation"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND_PCM_OSS: OSS PCM (digital audio) API"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND_HRTIMER: HR-timer backend support"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND_SUPPORT_OLD_API: Support old ALSA API"),(0,a.kt)("li",{parentName:"ul"},"CONFIG_SND_PROC_FS: Sound Proc FS Support"))),(0,a.kt)("li",{parentName:"ul"},"CONFIG_IPV6: The IPv6 protocol (change from module to built-in)")),(0,a.kt)("h3",{id:"base-distro"},"Base Distro"),(0,a.kt)("p",null,"Package updates including CVE mitigations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"bash: version 5.2.002"),(0,a.kt)("li",{parentName:"ul"},"bind: version 9.18.8 (CVE-2022-38178 CVE-2022-38178 CVE-2022-3080 CVE-2022-2795)"),(0,a.kt)("li",{parentName:"ul"},"btrfs-progs: version 6.0"),(0,a.kt)("li",{parentName:"ul"},"curl: version 7.86.0"),(0,a.kt)("li",{parentName:"ul"},"dbus: version 1.14.4"),(0,a.kt)("li",{parentName:"ul"},"freeglut: version 3.4.0"),(0,a.kt)("li",{parentName:"ul"},"git: version 2.38.1 (CVE-2022-39253 CVE-2022-39260)"),(0,a.kt)("li",{parentName:"ul"},"glibc-zoneinfo: version 2022e"),(0,a.kt)("li",{parentName:"ul"},"harfbuzz: version 5.3.1"),(0,a.kt)("li",{parentName:"ul"},"icu4c: version 72.1"),(0,a.kt)("li",{parentName:"ul"},"iproute2: version 6.0.0"),(0,a.kt)("li",{parentName:"ul"},"kernel-firmware: version 20221017_48407ff"),(0,a.kt)("li",{parentName:"ul"},"less: version 608"),(0,a.kt)("li",{parentName:"ul"},"libXmu: version 1.1.4"),(0,a.kt)("li",{parentName:"ul"},"libXrender: version 0.9.11"),(0,a.kt)("li",{parentName:"ul"},"libedit: version 20221009_3.1"),(0,a.kt)("li",{parentName:"ul"},"libffi: version 3.4.4"),(0,a.kt)("li",{parentName:"ul"},"libgpg-error: version 1.46"),(0,a.kt)("li",{parentName:"ul"},"libpciaccess: version 0.17"),(0,a.kt)("li",{parentName:"ul"},"libunistring: version 1.1"),(0,a.kt)("li",{parentName:"ul"},"libxkbfile: version 1.1.1"),(0,a.kt)("li",{parentName:"ul"},"libxshmfence: version 1.3.1"),(0,a.kt)("li",{parentName:"ul"},"lsof: version 4.96.4"),(0,a.kt)("li",{parentName:"ul"},"nginx: version 1.22.1"),(0,a.kt)("li",{parentName:"ul"},"openssh: version 9.1p1"),(0,a.kt)("li",{parentName:"ul"},"php: version 7.4.32"),(0,a.kt)("li",{parentName:"ul"},"pixman: version 0.42.0"),(0,a.kt)("li",{parentName:"ul"},"rsync: version 3.2.7"),(0,a.kt)("li",{parentName:"ul"},"samba: version 4.17.2 (CVE-2021-20251 CVE-2022-3437 CVE-2022-3592)"),(0,a.kt)("li",{parentName:"ul"},"sudo: version 1.9.12"),(0,a.kt)("li",{parentName:"ul"},"tree: version 2.0.4"),(0,a.kt)("li",{parentName:"ul"},"xkeyboard-config: version 2.37"),(0,a.kt)("li",{parentName:"ul"},"xterm: version 375"),(0,a.kt)("li",{parentName:"ul"},"zlib: version 1.2.13 (CVE-2022-37434)")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.wireguard.com/"},'"WireGuard" and the "WireGuard" logo are registered trademarks of Jason A. Donenfeld.')))}m.isMDXComponent=!0}}]);